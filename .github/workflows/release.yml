name: Build-Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

env:
  DOTNET_PACKAGE_NAME: UniEnum
  DOTNET_PROJECT_NAME: UniEnum.NetCore
  DOTNET_PROJECT_PATH: src/UniEnum.NetCore
  DOTNET_TEST_PROJECT_PATH: src/UniEnum.Tests
  DOTNET_VERSION: 5.0.x

  UNITY_PACKAGE_NAME: UniEnum.Unity

  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  NUGET_XMLDOC_MODE: skip

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      # set release tag(*.*.*) to env.GIT_TAG
      - run: echo "GIT_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - run: dotnet build ${{ env.DOTNET_PROJECT_PATH }} -c Release -p:Version=${{ env.GIT_TAG }}
      - run: dotnet test ${{ env.DOTNET_TEST_PROJECT_PATH }} -c Release --no-build
      - run: dotnet pack ${{ env.DOTNET_PROJECT_PATH }}/${{ env.PACKAGE_NAME }}.csproj -c Release --no-build -p:Version=${{ env.GIT_TAG }}

      # Store artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: nuget
          path: ./${{ env.DOTNET_PROJECT_PATH }}/bin/Release/${{ env.DOTNET_PACKAGE_NAME }}.${{ env.GIT_TAG }}.nupkg

  create-release:
    #needs: [build-dotnet, build-unity]
    needs: [build-dotnet]
    runs-on: ubuntu-latest
    steps:
      # setup dotnet for nuget push
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      # set release tag(*.*.*) to env.GIT_TAG
      - run: echo "GIT_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Create Releases
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Ver.${{ github.ref }}

      # Download (All) Artifacts to current directory
      - uses: actions/download-artifact@v2-preview

      # Upload to NuGet
      - run: dotnet nuget push "./nuget/*.nupkg" -s https://www.nuget.org/api/v2/package -k ${{ secrets.NUGET_API_KEY }}

      # Upload to Releases(unitypackage)
      #- uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }}
      #    asset_path: ./${{ env.UNITY_PACKAGE_NAME }}.${{ env.GIT_TAG }}.unitypackage/${{ env.UNITY_PACKAGE_NAME }}.${{ env.GIT_TAG }}.unitypackage
      #    asset_name: ${{ env.UNITY_PACKAGE_NAME }}.${{ env.GIT_TAG }}.unitypackage
      #    asset_content_type: application/octet-stream
