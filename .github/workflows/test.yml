name: Test

on: [push]

jobs:
  dotnet-test:

    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      NUGET_XMLDOC_MODE: skip
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.101
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal


  unity-test:
    strategy:
      matrix:
        unity: [2019.4.4f1]
        include:
          - unity: 2019.4.4f1
            license: ULF_2019
    
    runs-on: ubuntu-latest
    container:
      # https://hub.docker.com/r/gableroux/unity3d/tags
      image: gableroux/unity3d:${{ matrix.unity }}-linux-il2cpp

    steps:
      - uses: actions/checkout@v2

      # Activate license
      - run: echo -n "$UNITY_LICENSE" >> unity.ulf
        env:
          UNITY_LICENSE: ${{ secrets[matrix.license] }}
      - run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile unity.ulf || exit 0
      - run: rm -f unity.ulf

      - name: Run EditMode Test
        run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile
          -runTests
          -testPlatform PlayMode
          -testsResultFile result.xml
        working-directory: src/UniEnum.Unity

      #- name: Build UnitTest Player
      #  run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile \
      #    -executeMethod UnitTestBuilder.BuildUnitTest \
      #    /headless /ScriptBackend IL2CPP \
      #    /BuildTarget StandaloneLinux64
      #  working-directory: src/UniEnum.Unity

      #- name: Run UnitTest
      #  run: ./RuntimeUnitTestToolkit/bin/UnitTest/StandaloneLinux64_IL2CPP/test
